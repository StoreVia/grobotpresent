"use strict";
/**
 * ## ms
 * ### A Powerful, efficient yet simple system to convert human-readable time to ms
 *
 * @param {string} str `string`
 * @returns {number} `number`
 *
 * ---
 *
 * @link [`Documentation`](https://simplyd.js.org/docs/misc/ms)
 * @example simplydjs.ms('1h')
 */function ms(str){let l=0,s,r,a;
// Convert the string to easier terms
// Splitting the string based on the terms
var t=(""+(str=str.replaceAll("week","w").replaceAll("weeks","w").replaceAll("day","d").replaceAll("days","d").replaceAll("hour","h").replaceAll("hours","h").replaceAll("minute","m").replaceAll("minutes","m").replaceAll("min","m").replaceAll("second","s").replaceAll("seconds","s").replaceAll("sec","s"))).split(" ").filter(v=>""!=v&&/^(\d{1,}\.)?\d{1,}([wdhms])?$/i.test(v)),c=t.length;for(let e=0;e<c;e++)if(s=t[e],r=s.match(/[wdhms]$/i))
// Actual conversion from human-readable time to ms
switch(a=Number(s.replace(r[0],"")),r[0].toLowerCase()){case"w":// weeks
l+=6048e5*a;break;case"d":// days
l+=864e5*a;break;case"h":// hours
l+=36e5*a;break;case"m":// minutes
l+=6e4*a;break;case"s":// seconds
l+=1e3*a}else!isNaN(parseFloat(s))&&isFinite(parseFloat(s))&&(l+=parseFloat(s));return l}Object.defineProperty(exports,"__esModule",{value:!0}),exports.ms=void 0,exports.ms=ms;