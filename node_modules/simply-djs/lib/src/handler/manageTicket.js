"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.manageTicket=void 0;const discord_js_1=require("discord.js"),misc_1=require("../misc"),error_1=require("../error");
// ------------------------------
// ------ F U N C T I O N -------
// ------------------------------
/**
 * ##manageTicket
 * ### A Ticket Handler for **simplydjs ticket system.**

 * @param {ButtonInteraction} button [`ButtonInteraction`](https://old.discordjs.dev/#/docs/discord.js/main/class/ButtonInteraction)
 * @param {manageTicketOptions} options [`manageTicketOptions`](https://simplyd.js.org/docs/handler/managesuggest#managesuggestoptions)
 * @returns {Promise<DeleteResolve>} [`DeleteResolve`](https://simplyd.js.org/docs/handler/managesuggest#deleteresolve)
 *
 * ---
 *
 * @link [`Documentation`](https://simplyd.js.org/docs/handler/manageTicket)
 * @example simplydjs.manageTicket(interaction)
 */
async function manageTicket(button,options={}){return new Promise(async resolve=>{var s=button["client"];if(button.isButton())try{var e,t,o=button.member;
// ------------------------------
// ---- T I C K E T - S Y S -----
// ------------------------------
if("create_ticket"===button.customId){await button.deferReply({ephemeral:!0});let t=options?.ticketname||"ticket_{tag}";t=t.replaceAll("{username}",o.user.username).replaceAll("{tag}",o.user.username).replaceAll("{id}",o.user.id);const k=`Ticket has been opened by <@${o.user.id}>`;var n=button.guild.channels.cache.find(ch=>ch.topic===k);if(n)await button.editReply({content:`You have an existing ticket opened (${n.toString()}). Close it before creating a new one.`});else if(!n){let e;var i=button.guild.channels.cache.get(options?.category);i||(e=null),e=i;const S=[],C=[];options?.pingRoles?.forEach(r=>{C.push(r),S.push({id:r,allow:[discord_js_1.PermissionFlagsBits.ViewChannel,discord_js_1.PermissionFlagsBits.SendMessages,discord_js_1.PermissionFlagsBits.ReadMessageHistory]})});var a=await button.guild.channels.create({name:t,type:discord_js_1.ChannelType.GuildText,topic:k,parent:e,nsfw:!1,permissionOverwrites:[...S,{id:button.guild.roles.everyone,deny:[discord_js_1.PermissionFlagsBits.ViewChannel,discord_js_1.PermissionFlagsBits.SendMessages,discord_js_1.PermissionFlagsBits.ReadMessageHistory]},{id:s.user.id,allow:[discord_js_1.PermissionFlagsBits.ViewChannel,discord_js_1.PermissionFlagsBits.SendMessages,discord_js_1.PermissionFlagsBits.ReadMessageHistory]},{id:o,allow:[discord_js_1.PermissionFlagsBits.ViewChannel,discord_js_1.PermissionFlagsBits.SendMessages,discord_js_1.PermissionFlagsBits.ReadMessageHistory]}]}),l=(await button.editReply({content:`🎫 Opened your support ticket in ${a.toString()}.`}),(new discord_js_1.EmbedBuilder).setTitle(options?.embed?.title||"Ticket Created").setDescription((options?.embed?.description||"Ticket has been raised by {user}. The support will reach you shortly.\n\n**User ID**: `{id}` | **User Tag**: `{tag}`").replaceAll("{user}",o.user.toString()).replaceAll("{tag}",o.user.username).replaceAll("{id}",o.user.id).replaceAll("{guild}",button.guild.name)).setThumbnail(options.embed?.thumbnail||button.guild.iconURL()).setTimestamp().setColor(options?.embed?.color||(0,misc_1.toRgb)("#406DBC")).setFooter(options?.embed?.footer||{text:"©️ Rahuletto. npm i simply-djs",iconURL:"https://i.imgur.com/XFUIwPh.png"})),c=(options?.embed?.fields&&l.setFields(options?.embed?.fields),options?.embed?.author&&l.setAuthor(options?.embed?.author),options?.embed?.image&&l.setImage(options?.embed?.image),options?.embed?.thumbnail&&l.setThumbnail(options?.embed?.thumbnail),options?.embed?.timestamp&&l.setTimestamp(options?.embed?.timestamp),options?.embed?.title&&l.setTitle(options?.embed?.title),options?.embed?.url&&l.setURL(options?.embed?.url),options?.buttons?.close?.style&&(options.buttons.close.style=(0,misc_1.toButtonStyle)(options?.buttons?.close?.style)),options?.buttons?.reopen?.style&&(options.buttons.reopen.style=(0,misc_1.toButtonStyle)(options?.buttons?.reopen?.style)),options?.buttons?.delete?.style&&(options.buttons.delete.style=(0,misc_1.toButtonStyle)(options?.buttons?.delete?.style)),options?.buttons?.transcript?.style&&(options.buttons.transcript.style=(0,misc_1.toButtonStyle)(options?.buttons?.transcript?.style)),(new discord_js_1.ButtonBuilder).setStyle(options?.buttons?.close?.style||discord_js_1.ButtonStyle.Danger).setEmoji(options?.buttons?.close?.emoji||"🔒").setLabel(options?.buttons?.close?.label||"Close").setCustomId("close_ticket")),d=(new discord_js_1.ActionRowBuilder).addComponents([c]);a.send({content:`Here is your ticket ${o.user.toString()}. | `+C.join(","),embeds:[l],components:[d]}).then(async msg=>{await msg.pin()})}}else if("close_ticket"===button.customId){await button.reply({content:"Locking the channel.",ephemeral:!0}),button.channel.permissionOverwrites.edit(o,{SendMessages:!1}).catch(()=>{});var u=(new discord_js_1.ButtonBuilder).setStyle(options?.buttons?.delete?.style||discord_js_1.ButtonStyle.Danger).setEmoji(options?.buttons?.delete?.emoji||"❌").setLabel(options?.buttons?.delete?.label||"Delete").setCustomId("delete_ticket"),p=(new discord_js_1.ButtonBuilder).setStyle(options?.buttons?.reopen?.style||discord_js_1.ButtonStyle.Success).setEmoji(options?.buttons?.reopen?.emoji||"🔓").setLabel(options?.buttons?.delete?.label||"Reopen").setCustomId("open_ticket"),b=(new discord_js_1.ButtonBuilder).setStyle(options?.buttons?.transcript?.style||discord_js_1.ButtonStyle.Primary).setEmoji(options?.buttons?.transcript?.emoji||"📜").setLabel(options?.buttons?.transcript?.label||"Transcript").setCustomId("tr_ticket"),_=(new discord_js_1.ActionRowBuilder).addComponents([p,u,b]);await button.message.edit({components:[_]})}else if("tr_ticket"===button.customId){await button.deferReply({ephemeral:!0});let e=await button.channel.messages.fetch({limit:100});e=e.sort((a,b)=>a.createdTimestamp-b.createdTimestamp);const v=[];e.forEach(m=>{var e;m.author.bot||(null!==(e=(e=m.attachments.first())?e.url:null)&&(m.content=e),v.push(`${m.author.username} (ID: ${m.author.id}) => `+m.content))}),await button.editReply({content:"Collecting messages to create logs"});var h=button.channel.topic.replace("Ticket has been opened by <@","").replace(">",""),h=await button.guild.members.fetch(h);const R=new discord_js_1.AttachmentBuilder(Buffer.from(v.join(`
`),"utf-8"),{name:h.user.username+".txt"});setTimeout(async()=>{await button.followUp({content:"Done. Generated the logs",files:[R],embeds:[],ephemeral:!1})},(0,misc_1.ms)("3s"))}else if("delete_ticket"===button.customId){await button.deferReply({ephemeral:!1});var g=(new discord_js_1.ButtonBuilder).setCustomId("yes_delete").setLabel("Delete").setStyle(discord_js_1.ButtonStyle.Danger),y=(new discord_js_1.ButtonBuilder).setCustomId("cancel").setLabel("Cancel").setStyle(discord_js_1.ButtonStyle.Success),w=(new discord_js_1.ActionRowBuilder).addComponents([g,y]);button.editReply({content:"Are you sure ?? This process is not reversible !",components:[w]})}else if("yes_delete"===button.customId){await button.message.edit({content:"Deleting the channel..",embeds:[],components:[]});let e=await button.channel.messages.fetch({limit:100});const I=[];(e=e.sort((a,b)=>a.createdTimestamp-b.createdTimestamp)).forEach(m=>{var e;m.author.bot||(null!==(e=(e=m.attachments.first())?e.url:null)&&(m.content=e),I.push(`${m.author.username} (ID: ${m.author.id}) => `+m.content))});var j=button.channel.topic.replace("Ticket has been opened by <@","").replace(">",""),j=await button.guild.members.fetch(j),B=new discord_js_1.AttachmentBuilder(Buffer.from(I.join(`
`),"utf-8"),{name:j.user.username+".txt"});if(resolve({type:"Delete",channelId:button.channel.id,user:j.user,data:B}),options?.logChannelId){var f=await s.channels.cache.get(options?.logChannelId);if(!f)return;var T=(new discord_js_1.EmbedBuilder).setTitle("Ticket deleted").setDescription(`Ticket with the name: \`${button.channel.name}\` got deleted. Opened by: ${j.user}.`).setTimestamp().setColor("Red");await f.send({embeds:[T],files:[B]})}setTimeout(async()=>{await button.channel.delete()},(0,misc_1.ms)("5s"))}else"cancel"===button.customId?(await button.deferUpdate(),button.message.edit({content:"You cancelled to delete",components:[]})):"open_ticket"===button.customId&&(await button.reply({content:"Unlocking the channel.",ephemeral:!0}),button.channel.permissionOverwrites.edit(o,{SendMessages:!0}).catch(()=>{}),e=(new discord_js_1.ButtonBuilder).setStyle(options?.buttons?.close?.style||discord_js_1.ButtonStyle.Danger).setEmoji(options?.buttons?.close?.emoji||"🔒").setLabel(options?.buttons?.close?.label||"Close").setCustomId("close_ticket"),t=(new discord_js_1.ActionRowBuilder).addComponents([e]),button.message.edit({components:[t]}))}catch(e){if(options?.strict)throw new error_1.SimplyError({function:"manageTicket",title:"An Error occured when running the function ",tip:e.stack});console.log("SimplyError - manageTicket | Error: "+e.stack)}})}exports.manageTicket=manageTicket;